README

Flippy the Train is a train simulation that can be used to model logic
circuits.


Current

  . Rotation gesture recognizer for rotation; flick for deletion;
    pinch or something for mirror.

  . A tool/gesture for selecting everything connected to the current
    segment.  Triple-tap.

  . Selecting straight segments or platforms sucks.  Can we do a
    closest-segment to click thing on selection/tap, not just for
    linking?

  . Victory Screen
    . Track piece count for solved levels; have achievements.  Would be
      cool if there were two achievements: the fewest piece award, but
      also the rube goldberg award for more-than-X switched joins, and
      "the long ride" for most traveled pieces, etc.
    . At same time as above: victory message should say what is unlocked
      as well as what achievments were earned.  Little checklist with
      sparkler bursts: kachung! kachung! kachung!
        . goal accomplished: ka-chick?
        . achievement: brr-bring
    . Goals screen (esp with results) doesn't fit, especially when
      showing results and with victory button and in landscape on 3.5
      inch iPhone.  Maybe some screen-specific code would be
      appropriate; font size or side-by-side display or a button for
      details or something.  Maybe toggle goals-long display with
      results display?  Or even both goals-short+goals-long.
      Okay, how about this: First implement general-purpose scrolling
      on the goals overlay; that will solve the problem crudely.  Then
      try a simple new tabbed window component (HLTabbedNode) and
      split goals and results onto separate tabs.  See if like it, but
      even if not, then we've got a nice new component.
    . Also maybe prompt user to save (and/or autosave) on victory rather
      than going straight to next level.

  . Interface help screen (explain holding down for multi-select,
    double-click switches, hold down switch to delete it, center
    button to find and follow train, hold center button to reset
    zoom, rotate gesture).

  . "About" screen with name.  Choose production company.  Reserve
    website?  Include feedback email address?  Credits: grass texture
    (goodtextures.com); DSMultilineButton.

  . Split off HLSpriteKit as a CocoaPod; re-create project.  Upload to
    github.  Put open source link into the About screen.

  . Replace DSMultilineLabelNode with SuperSpriteKit / SSKMultiLineLabelNode.h?
  . Use SSKTileableNode in SuperSpriteKit?

  . Low memory warning.  (Test in debugger.)

  . Infinite grid and real quadtree.

    - QuadTree and SKNode hierarchy should be coordinated, and load/unload
      cells/areas/tiles at the same time.

    - Maybe best to try and find implementations of this, and adapt
      one for our use.

    - Perhaps at the same time generate terrain in a way that is less
      uniform than just a tiled image.  At one point I had an idea to
      do random patches of squares in earth tones, procedurally
      generated like Minecraft.

  . Localize the saved circuit/gate names, perhaps in a plist like the
    challenge level information.

  . Maybe at the same time as doing icons and splash screens: Check
    SKScene dimensions for each device; is anything being scaled that
    shouldn't be?  c.f. nativeScale documentation on UIScreen.

Lower Priority

  . For challenge games, show the level title in the save game slots
    when loading and saving.  (Need to encode the level number
    separately from the track scene, I think, so that the track scene
    doesn't have to be unencoded just to get some meta information.  I
    think it is possible to encode it at the top level of the archive,
    and then open the archive and only decode the meta-information
    keys, without decoding the track scene.  Although: Does prepping
    an NSKeyedUnarchiver with binary XML data, and then scanning
    through it, require too much time even without encoding the track
    scene within?)

  . Track destruction of readout and platform should not show the
    same particle emitters as normal segments.

  . Prettier links.  Maybe quadratic Bezier curves for link nodes.
    Maybe different coloring.

  . Long press on saved games deletes them.

  . For import thumbnails: Trace out CG lines for track segment paths
    rather than shrinking down images.  The result might be better.
    (And wouldn't need UIImages anymore in HLTextureStore.)

  . For multisegment rotation: In case of conflict, search for nearby
    pivot that would work without conflicts.  Shouldn't be hard to
    check a few anyway.

  . Prettier Bezier curves for links . . . well, if it does indeed
    look better.  Control points chosen so that the links always curve
    a bit: Perhaps usually normal to the switch dirction, in the
    direction of the other endpoint, but then if the other endpoint
    has the same X or Y coordinate, then bend it 45 degrees or
    something.

  . Inertia for scrolling pan motion.

  . Consider doing tutorial stuff for the Half Adder level: Show the
    user how to handle gates/circuits/exports.

  . If multiple trains, then train edit menu for play/pause controls
    (and an explicit way to turn train around, perhaps).

  . Draw a line with your finger, segments created automatically.
    Better: A special "auto connect" path subtrack which
    calculates a path between two specified segments and maintains
    the connection following moves and rotations of those
    segments.

  . Undo stack.

  . Train acceleration.
